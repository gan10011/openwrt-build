name: ZN-M2 wifi

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/VIKINGYFY/immortalwrt.git
  REPO_BRANCH: main
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: ./config/imm.config
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai


    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Setup environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
        gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget

    - name: Configure firmware
      run: |
        
        # 设置目标设备
        sed -i 's/CONFIG_TARGET_PROFILE=.*/CONFIG_TARGET_PROFILE="DEVICE_zn_m2"/' .config
        
        # 移除不需要的模块
        sed -i '/CONFIG_PACKAGE_kmod-usb/d' .config
        sed -i '/CONFIG_PACKAGE_kmod-nss/d' .config
        sed -i '/CONFIG_PACKAGE_kmod-qca-nss/d' .config
        sed -i '/CONFIG_PACKAGE_usbutils/d' .config
        
        # 添加OpenClash
        echo "CONFIG_PACKAGE_luci-app-openclash=y" >> .config
        
        # 优化内存占用
        echo "CONFIG_TARGET_OPTIMIZATION=\"-Os -pipe -mcpu=cortex-a53 -fno-caller-saves -fno-plt\"" >> .config
        echo "CONFIG_TARGET_OPTIONS=\"-fno-caller-saves -fno-plt\"" >> .config
        echo "CONFIG_KERNEL_OPTIMIZATION=\"-Os -pipe -mcpu=cortex-a53 -fno-caller-saves -fno-plt\"" >> .config
        
        # 仅保留必要功能
        echo "CONFIG_DEFAULT_nss-firmware-ipq60xx=y" >> .config
        echo "CONFIG_DEFAULT_ipq-wifi-zn_m2=y" >> .config
        echo "CONFIG_DEFAULT_kmod-ath11k=y" >> .config
        echo "CONFIG_DEFAULT_kmod-ath11k-ahb=y" >> .config
        
        # 清理配置
        make defconfig

    - name: Build firmware
      run: |
        make -j$(($(nproc) + 1)) V=s

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: firmware
        path: bin/targets/*/*

    - name: Create release
      uses: softprops/action-gh-release@v1
      if: success()
      with:
        files: bin/targets/*/*/*
        body: "ImmortalWrt build for zn_m2 with WiFi and OpenClash"
